let CustomErrorHandler,JwtService;_c19‍.x([["default",()=>_c19‍.o]]);_c19‍.w("../services/CustomErrorHandler",[["default",["CustomErrorHandler"],function(v){CustomErrorHandler=v}]]);_c19‍.w("../services/JwtService",[["default",["JwtService"],function(v){JwtService=v}]]);


const auth = async (req,res,next) => {
    let authHeader= req.headers.authorization;

    _c19‍.g.console.log(authHeader);

    if(!authHeader){
        return next(CustomErrorHandler.unAuthorized())
    }


    const token=  authHeader.split(' ')[1];
    
    try {
        const {_id,role} = await  JwtService.verify(token); 
        const user ={_id,role}
        req.user=user;
        next();
        
    } catch (error) {
        return next(CustomErrorHandler.unAuthorized())
    }


}

_c19‍.d(auth);